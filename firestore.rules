rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is HOD
    function isHOD() {
      return request.auth.token.email == 'hodece@mvit.edu.in';
    }
    
    // Helper function to check if user is assigned to the task
    function isAssignedToTask(taskData) {
      return taskData.assignedUsers.hasAny([request.auth.uid]);
    }
    
    // Tasks collection rules
    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isHOD();
      allow update: if isAuthenticated() && (
        isHOD() || 
        // Allow assigned users to update completion status and add comments
        (isAssignedToTask(resource.data) && 
         request.resource.data.diff(resource.data).affectedKeys().hasAny(['isCompleted', 'comments']))
      );
      allow delete: if isAuthenticated() && isHOD();
    }
    
    // Messages collection rules
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid &&
        request.resource.data.timestamp is timestamp;
      allow update: if false;
      allow delete: if false;
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId && 
        !request.resource.data.diff(resource.data).affectedKeys().hasAny(['isHOD']);
      allow delete: if false;
    }
  }
}